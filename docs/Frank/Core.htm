<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Frameset//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
    <title>Core -  Documentation</title>
    <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"/>
    <link type="text/css" rel="stylesheet" href="../main.css"/>
    <script type="text/javascript" src="../js/jquery-1.3.2.min.js"></script>
    <script type="text/javascript" src="../js/jquery.scrollTo-min.js"></script>
    <script type="text/javascript" src="../js/navigation.js"></script>
  </head>
  <body><div id="namespaces">
	<h2 class="fixed">Namespaces</h2>
	<div class="scroll">
		<ul><li>
          <a href="../../../../../Frank/index.htm" class="current">Frank</a>
      </li>
		</ul>
	</div>
</div><div id="types">
  <h2 class="fixed">Types in Frank</h2>
	<div class="scroll">
		<ul><li>
            <a href="../../../../../Frank/Core.htm" class="current">Core</a>
        </li><li>
            <a href="../../../../../Frank/FrankApp.htm">FrankApp</a>
        </li><li>
            <a href="../../../../../Frank/Route.htm">Route</a>
        </li><li>
            <a href="../../../../../Frank/Routing.htm">Routing</a>
        </li>
		</ul>
	</div>
</div>
    <div class="header">
		<p class="class"><strong>Type</strong> Core</p>
		<p><strong>Namespace</strong> Frank</p>
	</div>
    <div class="sub-header">


			<h3 class="section">Methods</h3>
			<ul><li><a href="../../../../../Frank/Core.htm#appendHeader">appendHeader</a></li><li><a href="../../../../../Frank/Core.htm#appendHeaderValues">appendHeaderValues</a></li><li><a href="../../../../../Frank/Core.htm#putAsJson``1">putAsJson&lt;a&gt;</a></li><li><a href="../../../../../Frank/Core.htm#putAsXml``1">putAsXml&lt;a&gt;</a></li><li><a href="../../../../../Frank/Core.htm#putContent">putContent</a></li><li><a href="../../../../../Frank/Core.htm#putDataContract``1">putDataContract&lt;a&gt;</a></li><li><a href="../../../../../Frank/Core.htm#putHtml">putHtml</a></li><li><a href="../../../../../Frank/Core.htm#putJson">putJson</a></li><li><a href="../../../../../Frank/Core.htm#putRequest">putRequest</a></li><li><a href="../../../../../Frank/Core.htm#putResponse">putResponse</a></li><li><a href="../../../../../Frank/Core.htm#puts">puts</a></li><li><a href="../../../../../Frank/Core.htm#putSerialized``1">putSerialized&lt;a&gt;</a></li><li><a href="../../../../../Frank/Core.htm#putText">putText</a></li><li><a href="../../../../../Frank/Core.htm#putXml">putXml</a></li><li><a href="../../../../../Frank/Core.htm#redirectTo">redirectTo</a></li><li><a href="../../../../../Frank/Core.htm#run">run</a></li>
			</ul>

			<h3 class="section">Properties</h3>
			<ul><li><a href="../../../../../Frank/Core.htm#frank">frank</a></li><li><a href="../../../../../Frank/Core.htm#getParams">getParams</a></li><li><a href="../../../../../Frank/Core.htm#getRequest">getRequest</a></li><li><a href="../../../../../Frank/Core.htm#getResponse">getResponse</a></li>
			</ul>

	</div>



	<h3 class="section">Public static methods</h3>
<div id="appendHeader" class="method">
		<h4><span title="FSharp.Monad.State<Unit, Tuple<HttpRequestMessage, HttpResponseMessage>>">State&lt;Unit, Tuple&lt;HttpRequestMessage, HttpResponseMessage&gt;&gt;</span> <strong>appendHeader</strong>(<span title="System.string">string</span> name, <span title="System.string">string</span> value)</h4>
		<div class="content">Updates the state of the response headers with the specified name-value pair.




		</div>
	</div><div id="appendHeaderValues" class="method">
		<h4><span title="FSharp.Monad.State<Unit, Tuple<HttpRequestMessage, HttpResponseMessage>>">State&lt;Unit, Tuple&lt;HttpRequestMessage, HttpResponseMessage&gt;&gt;</span> <strong>appendHeaderValues</strong>(<span title="System.string">string</span> name, <span title="System.String[]">String[]</span> values)</h4>
		<div class="content">Updates the state of the response headers with the specified name-value pair.




		</div>
	</div><div id="putAsJson``1" class="method">
		<h4><span title="FSharp.Monad.State<Unit, Tuple<HttpRequestMessage, HttpResponseMessage>>">State&lt;Unit, Tuple&lt;HttpRequestMessage, HttpResponseMessage&gt;&gt;</span> <strong>putAsJson&lt;a&gt;</strong>(<span title="Frank.a">a</span> content)</h4>
		<div class="content">Updates the state of the response content serialized with a data contract as application/json.




		</div>
	</div><div id="putAsXml``1" class="method">
		<h4><span title="FSharp.Monad.State<Unit, Tuple<HttpRequestMessage, HttpResponseMessage>>">State&lt;Unit, Tuple&lt;HttpRequestMessage, HttpResponseMessage&gt;&gt;</span> <strong>putAsXml&lt;a&gt;</strong>(<span title="Frank.a">a</span> content, <span title="System.string">string</span> contentType)</h4>
		<div class="content">Updates the state of the response content with content object serialized as XML as the specified content type.




		</div>
	</div><div id="putContent" class="method">
		<h4><span title="FSharp.Monad.State<Unit, Tuple<HttpRequestMessage, HttpResponseMessage>>">State&lt;Unit, Tuple&lt;HttpRequestMessage, HttpResponseMessage&gt;&gt;</span> <strong>putContent</strong>(<span title="Microsoft.Http.HttpContent">HttpContent</span> content)</h4>
		<div class="content">Updates the state of the response content.




		</div>
	</div><div id="putDataContract``1" class="method">
		<h4><span title="FSharp.Monad.State<Unit, Tuple<HttpRequestMessage, HttpResponseMessage>>">State&lt;Unit, Tuple&lt;HttpRequestMessage, HttpResponseMessage&gt;&gt;</span> <strong>putDataContract&lt;a&gt;</strong>(<span title="Frank.a">a</span> content, <span title="System.string">string</span> contentType)</h4>
		<div class="content">Updates the state of the response content serialized with a data contract as the specified content type.




		</div>
	</div><div id="putHtml" class="method">
		<h4><span title="FSharp.Monad.State<Unit, Tuple<HttpRequestMessage, HttpResponseMessage>>">State&lt;Unit, Tuple&lt;HttpRequestMessage, HttpResponseMessage&gt;&gt;</span> <strong>putHtml</strong>(<span title="System.string">string</span> content)</h4>
		<div class="content">Updates the state of the response content as text/html.




		</div>
	</div><div id="putJson" class="method">
		<h4><span title="FSharp.Monad.State<Unit, Tuple<HttpRequestMessage, HttpResponseMessage>>">State&lt;Unit, Tuple&lt;HttpRequestMessage, HttpResponseMessage&gt;&gt;</span> <strong>putJson</strong>(<span title="System.string">string</span> content)</h4>
		<div class="content">Updates the state of the response content as text/json.




		</div>
	</div><div id="putRequest" class="method">
		<h4><span title="FSharp.Monad.State<Unit, Tuple<HttpRequestMessage, HttpResponseMessage>>">State&lt;Unit, Tuple&lt;HttpRequestMessage, HttpResponseMessage&gt;&gt;</span> <strong>putRequest</strong>(<span title="Microsoft.Http.HttpRequestMessage">HttpRequestMessage</span> req)</h4>
		<div class="content">Updates the state of the request.




		</div>
	</div><div id="putResponse" class="method">
		<h4><span title="FSharp.Monad.State<Unit, Tuple<HttpRequestMessage, HttpResponseMessage>>">State&lt;Unit, Tuple&lt;HttpRequestMessage, HttpResponseMessage&gt;&gt;</span> <strong>putResponse</strong>(<span title="Microsoft.Http.HttpResponseMessage">HttpResponseMessage</span> resp)</h4>
		<div class="content">Updates the state of the response.




		</div>
	</div><div id="puts" class="method">
		<h4><span title="FSharp.Monad.State<Unit, Tuple<HttpRequestMessage, HttpResponseMessage>>">State&lt;Unit, Tuple&lt;HttpRequestMessage, HttpResponseMessage&gt;&gt;</span> <strong>puts</strong>(<span title="System.Collections.Generic.IEnumerable<Byte>">IEnumerable&lt;Byte&gt;</span> content, <span title="System.string">string</span> contentType)</h4>
		<div class="content">Updates the state of the response content with the provided bytestring as the specified content type.




		</div>
	</div><div id="putSerialized``1" class="method">
		<h4><span title="FSharp.Monad.State<Unit, Tuple<HttpRequestMessage, HttpResponseMessage>>">State&lt;Unit, Tuple&lt;HttpRequestMessage, HttpResponseMessage&gt;&gt;</span> <strong>putSerialized&lt;a&gt;</strong>(<span title="Frank.a">a</span> content, <span title="System.string">string</span> contentType, <span title="Microsoft.FSharp.Core.FSharpFunc<Tuple<MemoryStream, a>, Unit>">FSharpFunc&lt;Tuple&lt;MemoryStream, a&gt;, Unit&gt;</span> serialize)</h4>
		<div class="content">




		</div>
	</div><div id="putText" class="method">
		<h4><span title="FSharp.Monad.State<Unit, Tuple<HttpRequestMessage, HttpResponseMessage>>">State&lt;Unit, Tuple&lt;HttpRequestMessage, HttpResponseMessage&gt;&gt;</span> <strong>putText</strong>(<span title="System.string">string</span> content)</h4>
		<div class="content">Updates the state of the response content as text/plain.




		</div>
	</div><div id="putXml" class="method">
		<h4><span title="FSharp.Monad.State<Unit, Tuple<HttpRequestMessage, HttpResponseMessage>>">State&lt;Unit, Tuple&lt;HttpRequestMessage, HttpResponseMessage&gt;&gt;</span> <strong>putXml</strong>(<span title="System.Xml.Linq.XElement">XElement</span> content, <span title="System.string">string</span> contentType)</h4>
		<div class="content">Updates the state of the response content as the specified content type.




		</div>
	</div><div id="redirectTo" class="method">
		<h4><span title="FSharp.Monad.State<Unit, Tuple<HttpRequestMessage, HttpResponseMessage>>">State&lt;Unit, Tuple&lt;HttpRequestMessage, HttpResponseMessage&gt;&gt;</span> <strong>redirectTo</strong>(<span title="System.string">string</span> url)</h4>
		<div class="content">Updates the response state with a redirect, setting the status code to 303
and the location header to the specified url.




		</div>
	</div><div id="run" class="method">
		<h4><span title="Microsoft.Http.HttpResponseMessage">HttpResponseMessage</span> <strong>run</strong>(<span title="FSharp.Monad.State<Unit, Tuple<HttpRequestMessage, HttpResponseMessage>>">State&lt;Unit, Tuple&lt;HttpRequestMessage, HttpResponseMessage&gt;&gt;</span> h, <span title="Microsoft.Http.HttpRequestMessage">HttpRequestMessage</span> initialState_0, <span title="Microsoft.Http.HttpResponseMessage">HttpResponseMessage</span> initialState_1)</h4>
		<div class="content">Runs a Frank handler with an initial state and returns an HttpResponseMessage.




		</div>
	</div>

  <h3 class="section">Public properties</h3>
<div id="frank" class="method">
    <h4><span title="FSharp.Monad.StateBuilder">StateBuilder</span> <strong>frank</strong> get; </h4>
    <div class="content">Sets an instance of StateBuilder as the computation workflow for a Frank monad.

    </div>
  </div><div id="getParams" class="method">
    <h4><span title="FSharp.Monad.State<IDictionary<string, string>, Tuple<HttpRequestMessage, HttpResponseMessage>>">State&lt;IDictionary&lt;string, string&gt;, Tuple&lt;HttpRequestMessage, HttpResponseMessage&gt;&gt;</span> <strong>getParams</strong> get; </h4>
    <div class="content">Gets the current state of the parameters.

    </div>
  </div><div id="getRequest" class="method">
    <h4><span title="FSharp.Monad.State<HttpRequestMessage, Tuple<HttpRequestMessage, HttpResponseMessage>>">State&lt;HttpRequestMessage, Tuple&lt;HttpRequestMessage, HttpResponseMessage&gt;&gt;</span> <strong>getRequest</strong> get; </h4>
    <div class="content">Gets the current state of the request.

    </div>
  </div><div id="getResponse" class="method">
    <h4><span title="FSharp.Monad.State<HttpResponseMessage, Tuple<HttpRequestMessage, HttpResponseMessage>>">State&lt;HttpResponseMessage, Tuple&lt;HttpRequestMessage, HttpResponseMessage&gt;&gt;</span> <strong>getResponse</strong> get; </h4>
    <div class="content">Gets the current state of the response.

    </div>
  </div>
<div id="footer">
  <p>Based on v0.0.0.0 of </p>
  <p>Generated by <a href="http://docu.jagregory.com">docu</a></p>
</div>
  </body>
</html>